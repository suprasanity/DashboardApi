pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/suprasanity/dashboardapi.git'
            }
        }
        stage('Maven') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('SonarQube') {
            steps {
                 withSonarQubeEnv('SonarQubeServer') {
                    withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                        sh "mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=DashboardApi -Dsonar.projectName='DashboardApi'"
                     }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t dashboardapi .'
            }
        }
        stage('Push to Docker Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'ghcr-credentials', usernameVariable: 'GHCR_USERNAME', passwordVariable: 'GHCR_PASSWORD')]) {
                    sh 'docker login ghcr.io -u $GHCR_USERNAME -p $GHCR_PASSWORD'
                    sh 'docker tag dashboardapi ghcr.io/suprasanity/dashboardapi:latest'
                    sh 'docker push ghcr.io/suprasanity/dashboardapi:latest'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
